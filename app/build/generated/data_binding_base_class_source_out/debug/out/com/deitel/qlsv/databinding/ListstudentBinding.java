// Generated by view binder compiler. Do not edit!
package com.deitel.qlsv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.deitel.qlsv.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ListstudentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView TextViewStudentCode;

  @NonNull
  public final TextView TextViewStudentName;

  @NonNull
  public final ImageButton studentdelete;

  @NonNull
  public final ImageButton studentinformation;

  @NonNull
  public final ImageButton studentupdate;

  private ListstudentBinding(@NonNull LinearLayout rootView, @NonNull TextView TextViewStudentCode,
      @NonNull TextView TextViewStudentName, @NonNull ImageButton studentdelete,
      @NonNull ImageButton studentinformation, @NonNull ImageButton studentupdate) {
    this.rootView = rootView;
    this.TextViewStudentCode = TextViewStudentCode;
    this.TextViewStudentName = TextViewStudentName;
    this.studentdelete = studentdelete;
    this.studentinformation = studentinformation;
    this.studentupdate = studentupdate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ListstudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ListstudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.liststudent, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ListstudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.TextViewStudentCode;
      TextView TextViewStudentCode = rootView.findViewById(id);
      if (TextViewStudentCode == null) {
        break missingId;
      }

      id = R.id.TextViewStudentName;
      TextView TextViewStudentName = rootView.findViewById(id);
      if (TextViewStudentName == null) {
        break missingId;
      }

      id = R.id.studentdelete;
      ImageButton studentdelete = rootView.findViewById(id);
      if (studentdelete == null) {
        break missingId;
      }

      id = R.id.studentinformation;
      ImageButton studentinformation = rootView.findViewById(id);
      if (studentinformation == null) {
        break missingId;
      }

      id = R.id.studentupdate;
      ImageButton studentupdate = rootView.findViewById(id);
      if (studentupdate == null) {
        break missingId;
      }

      return new ListstudentBinding((LinearLayout) rootView, TextViewStudentCode,
          TextViewStudentName, studentdelete, studentinformation, studentupdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
