// Generated by view binder compiler. Do not edit!
package com.deitel.qlsv.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.RadioButton;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.deitel.qlsv.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityUpdateStudentBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText EditTextStudentBirthdayUpdate;

  @NonNull
  public final EditText EditTextStudentCodeUpdate;

  @NonNull
  public final EditText EditTextStudentNameUpdate;

  @NonNull
  public final Button buttonUpdateStudent;

  @NonNull
  public final RadioButton radiobuttonFeMaleUpdate;

  @NonNull
  public final RadioButton radiobuttonMaleUpdate;

  private ActivityUpdateStudentBinding(@NonNull LinearLayout rootView,
      @NonNull EditText EditTextStudentBirthdayUpdate, @NonNull EditText EditTextStudentCodeUpdate,
      @NonNull EditText EditTextStudentNameUpdate, @NonNull Button buttonUpdateStudent,
      @NonNull RadioButton radiobuttonFeMaleUpdate, @NonNull RadioButton radiobuttonMaleUpdate) {
    this.rootView = rootView;
    this.EditTextStudentBirthdayUpdate = EditTextStudentBirthdayUpdate;
    this.EditTextStudentCodeUpdate = EditTextStudentCodeUpdate;
    this.EditTextStudentNameUpdate = EditTextStudentNameUpdate;
    this.buttonUpdateStudent = buttonUpdateStudent;
    this.radiobuttonFeMaleUpdate = radiobuttonFeMaleUpdate;
    this.radiobuttonMaleUpdate = radiobuttonMaleUpdate;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityUpdateStudentBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityUpdateStudentBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_update_student, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityUpdateStudentBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.EditTextStudentBirthdayUpdate;
      EditText EditTextStudentBirthdayUpdate = rootView.findViewById(id);
      if (EditTextStudentBirthdayUpdate == null) {
        break missingId;
      }

      id = R.id.EditTextStudentCodeUpdate;
      EditText EditTextStudentCodeUpdate = rootView.findViewById(id);
      if (EditTextStudentCodeUpdate == null) {
        break missingId;
      }

      id = R.id.EditTextStudentNameUpdate;
      EditText EditTextStudentNameUpdate = rootView.findViewById(id);
      if (EditTextStudentNameUpdate == null) {
        break missingId;
      }

      id = R.id.buttonUpdateStudent;
      Button buttonUpdateStudent = rootView.findViewById(id);
      if (buttonUpdateStudent == null) {
        break missingId;
      }

      id = R.id.radiobuttonFeMaleUpdate;
      RadioButton radiobuttonFeMaleUpdate = rootView.findViewById(id);
      if (radiobuttonFeMaleUpdate == null) {
        break missingId;
      }

      id = R.id.radiobuttonMaleUpdate;
      RadioButton radiobuttonMaleUpdate = rootView.findViewById(id);
      if (radiobuttonMaleUpdate == null) {
        break missingId;
      }

      return new ActivityUpdateStudentBinding((LinearLayout) rootView,
          EditTextStudentBirthdayUpdate, EditTextStudentCodeUpdate, EditTextStudentNameUpdate,
          buttonUpdateStudent, radiobuttonFeMaleUpdate, radiobuttonMaleUpdate);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
